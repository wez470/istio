apiVersion: networking.x-k8s.io/v1alpha1
kind: GatewayClass
metadata:
  name: istio
spec:
  controller: istio.io/gateway-controller
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: Gateway
metadata:
  name: gateway
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - hostname:
      match: Domain
      name: domain.example
    port: 80
    protocol: HTTP
    routes:
      routeNamespaces: {}
      routeSelector:
        matchLabels:
          selected: "yes"
      kind: HTTPRoute
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: HTTPRoute
metadata:
  name: http
  namespace: default
  labels:
    selected: "yes"
spec:
  hostnames: ["first.domain.example", "another.domain.example"]
  rules:
  - matches:
    - path:
        type: Prefix
        value: /get
      headers:
        type: Exact
        values:
          my-header: some-value
    filters:
    - type: RequestHeader
      requestHeader:
        add:
          my-added-header: added-value
        remove: [my-removed-header]
    forwardTo:
    - serviceName: httpbin
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: HTTPRoute
metadata:
  name: http2
  namespace: default
  labels:
    selected: "yes"
spec:
  hostnames: ["second.domain.example"]
  rules:
  - matches:
    - path:
        type: Prefix
        value: /second
    forwardTo:
    - serviceName: httpbin-second
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: HTTPRoute
metadata:
  name: http-not-selected
  namespace: default
  labels:
    selected: "nope"
spec:
  hostnames: ["should.not.select"]
  rules:
  - matches:
    - path:
        type: Prefix
        value: /get
    forwardTo:
    - serviceName: httpbin